pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn -B -DskipTests clean package sonar:sonar'
                }
            }
        }
        
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Deliver') {
            steps {
                sh 'chmod +x ./ci/scripts/deliver.sh'
                sh './ci/scripts/deliver.sh'
            }
        }

        stage('Package') {
            steps { 
                withCredentials([string(credentialsId: 'DockerHub', variable: 'TOKEN')]) {
                    sh "docker login -u 'sfreemanpo98' -p '$TOKEN' docker.io"
                    sh "docker build -t myapp:latest --tag sfreemanpo98/samplejava:myapp ."
                    sh "docker push sfreemanpo98/samplejava:myapp"
                }
            }
        }
    }
}
