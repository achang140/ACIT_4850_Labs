stages:
  - build
  - lint
  - test
  - zip
  - package
  - deliver

Build:
  stage: build
  script:
    - python3 -m venv ./venv
    - source ./venv/bin/activate
    - pip install -r requirements.txt
  tags:
    - "lab"

Lint:
  stage: lint
  script:
    - pylint --fail-under 5 *.py 
  tags:
    - "lab"

Test_and_Coverage:
  stage: test
  script:
    - |
      if [ -d "test-reports" ]; then
        rm -f test-reports/*.xml || true
      fi
      if [ -d "api-test-reports" ]; then
        rm -f api-test-reports/*.xml || true
      fi
      for file in test*.py; do
        coverage run --omit '*/dist-packages/*,*/site-packages/*' "$file"
        coverage report
        coverage xml -o coverage.xml
      done
  artifacts:
    when: always
    reports:
      junit:
        - test-reports/*.xml
        - api-test-reports/*.xml
  tags: 
    - "lab"

Zip:
  stage: zip
  script:
    - zip -j app.zip *.py
  artifacts:
    paths:
      - "*.py"
  tags:
    - "lab"

Package:
  stage: package
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: always
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build -t $DOCKER_USERNAME/point:pointapp .
    - docker push $DOCKER_USERNAME/point:pointapp
  tags:
    - "lab"

Deliver:
  stage: deliver
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web" && $RUN_DEPLOYMENT != "false"'
  script:
    - docker run -d $DOCKER_USERNAME/point:pointapp
  tags:
    - "lab"